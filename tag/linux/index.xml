<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux | 笼鹰的自习室</title><link>/tag/linux/</link><atom:link href="/tag/linux/index.xml" rel="self" type="application/rss+xml"/><description>linux</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>This work by 笼鹰 is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. 陕公网安备 61010302000452号 © 2020</copyright><lastBuildDate>Wed, 07 Oct 2020 00:00:00 +0000</lastBuildDate><image><url>/images/icon_hu0ad9a760d4acc21697f10ad9ba07207a_233385_512x512_fill_lanczos_center_2.png</url><title>linux</title><link>/tag/linux/</link></image><item><title>linux磁盘扩容</title><link>/post/disk/</link><pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate><guid>/post/disk/</guid><description>&lt;h3 id="背景">背景&lt;/h3>
&lt;p>作为Linux菜鸟，每次装Linux操作系统时我都要在分区这一步上花些功夫思考：怎么划分比较合适。（我的近期需求是什么?未来可能发生变化吗？）因为在逻辑分区划分好后就很难更改了，一旦某个分区空间耗尽会很麻烦。之前用EXSI管理服务器里的虚拟机，可以直接在web控制台中动态调整其磁盘大小。如果是vmware workstation pro或者virtualbox的虚拟机一般就用gparted调整分区(这么干有点害怕搞坏，操作前我会备份一下文件到移动硬盘)。自从学习了LVM后，分区管理一下子就变容易了，直接在CLI终端操作。&lt;/p>
&lt;h3 id="快速了解lvm">快速了解LVM&lt;/h3>
&lt;p>简单来说LVM就是将底层的多块物理卷PV组成一个存储池VG，用户可以在存储池上创建多个逻辑卷LV，这个逻辑卷就相当于windows下的一个C盘或者别的盘，用户可以往逻辑卷上装系统或者写数据，效果等同于写物理块上。&lt;/p>
&lt;p>LVM最关键的点就是这个逻辑卷，这是LVM好用的原因，因为LVM帮用户做好了映射。我们只需要知道LVM是利用Linux内核的device-mapper功能来实现存储系统的虚拟化，性能影响不大。LVM的很多好处都是因为有这个映射在。&lt;/p>
&lt;p>LVM最大的好处就是它可以在线（online）对逻辑卷（LV）和卷组（VG）进行创建、删除、调整大小等操作。无需重新启动服务，就可以将服务中用到的逻辑卷（LV）在线（online）/动态（live）迁移至别的硬盘上。&lt;/p>
&lt;p>当然还有些别的好处，例如允许创建快照，支持各种设备映射目标（device-mapper targets）。&lt;/p>
&lt;h3 id="稍微深入一下lvm">稍微深入一下LVM&lt;/h3>
&lt;ul>
&lt;li>MBR（Master Boot Record）（主引导记录）和GPT（GUID Partition Table）（GUID意为全局唯一标识符）是在磁盘上存储分区信息的两种不同方式。&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>传统的MBR分区方式最多4个主分区（3个主分区+1个扩展分区(扩展分区里面可以放多个逻辑分区)），无法创建大于2TB的分区，一般用fdisk分区工具。&lt;/li>
&lt;li>GPT分区方式将不会有这种限制，一般使用parted分区；&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>逻辑卷管理(LVM)，是 Logical Volume Manager（逻辑卷管理）的简写，lvm是卷的一种管理方式，并不是分区工具（也可不采用这种LVM管理方式）.&lt;/li>
&lt;/ul>
&lt;p>LVM的基本组成部分如下：&lt;/p>
&lt;ul>
&lt;li>物理卷 (PV)
&lt;br>一个可供存储LVM的块设备. 例如: 一块硬盘, 一个MBR或GPT分区, 一个回环文件, 一个被内核映射的设备 (例如 dm-crypt)。PV包含有与LVM相关的管理参数&lt;/li>
&lt;li>卷组 (VG)
&lt;br>&lt;font color=red>物理卷PV组合成一个存储池VG，作为存放逻辑卷LV的容器&lt;/font>。 PEs are allocated from a VG for a LV.&lt;/li>
&lt;li>&lt;strong>逻辑卷 (LV)&lt;/strong>
&lt;br>&lt;font color=red>&amp;ldquo;虚拟/逻辑卷&amp;quot;存放在一个卷组中,由物理块组成。&lt;/font>是一个类似于物理设备的块设备，例如，你可以直接在它上面创建一个文件系统文件系统。&lt;strong>逻辑卷不必是连续的空间，它可以跨越许多物理卷，并且可以在任何时候任意的调整大小。相比物理磁盘来说，更易于磁盘空间的管理&lt;/strong>&lt;/li>
&lt;li>物理块 (PE)
&lt;br>一个卷组中最小的连续区域(默认为4 MiB)，多个物理块将被分配给一个逻辑卷。可以把它看成物理卷的一部分，这部分可以被分配给一个逻辑卷。
&lt;img src="https://img.linux.net.cn/data/attachment/album/201406/18/134408sa12dauefffyszfg.jpg" alt="">&lt;/li>
&lt;/ul>
&lt;p>简单理解一下: 有一块物理硬盘/dev/sda，我们用LVM管理它。一个卷组VG可以看成是一个虚拟硬盘，逻辑卷LV可以看成虚拟硬盘上的磁盘分区，类似于C盘、D盘。而卷组VG是由下面的多个物理卷PV组成，物理卷PV的基本组成单位是物理块PE。而逻辑与物理实体之间映射关系不用管。&lt;/p>
&lt;p>&lt;img src="https://s2.ax1x.com/2020/01/22/1AMidK.png" alt="1AMidK.png">
如图，50G的硬盘/dev/sda，默认只分配了4G给根目录（红色实线），后面不够用了可以动态从VG里拨空间。&lt;/p>
&lt;p>下面再来看看LVM在baidu百科上的介绍&lt;font color="red">&lt;strong>LVM&lt;/strong>&lt;/font>(Logical Volume Manager)逻辑分卷管理器，本质上是一个虚拟设备驱动，是在内核中块设备和物理设备之间添加的一个新的抽象层次。&lt;/p>
&lt;h3 id="扩容和分区">扩容和分区&lt;/h3>
&lt;ol>
&lt;li>虚拟机关机，在宿主机的vmware界面中编辑虚拟机设置，硬件/硬盘/扩展磁盘容量。如果扩展选项是灰色的，需要删除快照或者使用vCenter Converter。如果宿主机是linux，可以用命令扩展磁盘：vmware-vdiskmanager -x 16Gb xxx.vmdk&lt;/li>
&lt;li>启动虚拟机&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash"># 查看硬盘容量
sudo fdisk -l
&amp;gt; Disk /dev/sda: 21.5 GB, 21474836480 bytes
# 查看文件系统
df -lh
&amp;gt; 和扩容之前结果一样，因为还没有给硬盘分区
# 开始分区
sudo fdisk /dev/sda
# 依次输入
m （命令提示）
p （查看分区）发现有三个盘，linux类型的主分区、Extended类型的、swap类型的，blocks为盘的大小（单位kB）
n （创建分区）
p (设为主分区)
3 (分区id)
起始扇区 需要观察之前查看分区的硬盘分布情况，选择有足够大空间的一段
结束扇区 直接回车，默认是将这段空白存储全部分给新分区
t （修改类型，8e为lvm，83为linux）
8e
w (写分区表)
# 分区结束，回到终端继续操作
sudo partprobe /dev/sda
sudo mkfs.ext4 /dev/sda3
&lt;/code>&lt;/pre>
&lt;h3 id="lvm卷管理">lvm卷管理&lt;/h3>
&lt;pre>&lt;code class="language-bash">sudo apt install lvm2
# 进入lvm管理
sudo lvm
# 查看物理卷PV
pvdisplay 或 pvscan
# 创建PV
pvcreate /dev/sda3
# 查看卷组VG
vgdisplay -v
# 创建VG，物理卷加入卷组
vgcreate vg /dev/sda3
# 创建逻辑卷LV
sudo lvcreate -n lv -L 12G vg
# 在LV上创建文件系统
sudo mkfs.ext4 /dev/ubuntu/lv
# 逻辑卷的UUID
blkid /dev/vg/lv
mkdir /home/vl
# 插入相应的条目/etc/fstab
UUID=b85df913-580f-461c-844f-546d8cde4646 /home/vl ext4 defaults 0 0
# 挂载
sudo mount /home/vl
&lt;/code>&lt;/pre>
&lt;p>用df -h和pvdisplay以及fdisk -l查看结果。&lt;/p>
&lt;blockquote>
&lt;p>Disk identifier: 0x00000000
Disk /dev/mapper/vg-lv doesn&amp;rsquo;t contain a valid partition table&lt;/p>
&lt;/blockquote>
&lt;p>这个是正常的，因为vg-lv是逻辑卷。本来就不应该有分区表的。&lt;/p>
&lt;h3 id="扩展根目录">扩展根目录&lt;/h3>
&lt;p>&lt;font color=red>前面是将整个虚拟机硬盘扩容，然后创建一个lvm类型的物理卷/dev/sda3，然后为它创建对应的vg，lv和文件系统格式化，并且动态调整lv的容量&lt;/font>&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
如果安装系统时直接把lvm挂载在根，系统会自动创建lv和vg。在卷管理步骤中自己不用再创建LV和VG，只要创建PV。
&lt;/div>
&lt;/div>
&lt;pre>&lt;code class="language-bash"># 将新增的物理盘加入根目录所在的逻辑卷
vgextend ubuntu--vg-ubuntu--lv /dev/xxx
# 扩展文件系统所在逻辑卷组
lvextend -L +20G /dev/mapper/ubuntu--vg-ubuntu--lv #若提示No space left on device，考虑先暂时将本地没用的文件删除或移出到移动硬盘，扩容后移回
或者
lvextend -L +100% /dev/mapper/ubuntu--vg-ubuntu--lv #如果前面vmware新增了20G，这里新增20G到lv大概率会出错，实际能用到的空间会比之前的小一点点。不清楚，可以用百分数代替。
# 使扩容生效
sudo resize2fs -p /dev/mapper/ubuntu--vg-ubuntu--lv
&lt;/code>&lt;/pre>
&lt;p>如果安装系统时没有选lvm挂载根目录，桌面linux系统建议使用parted，它支持多种分区表类型，允许用户创建、删除、调整、缩减、移动和复制分区，以及重新组织硬盘的使用，复制数据到新的硬盘上。gparted 是 parted 的图形界面前端&lt;/p>
&lt;p>sudo apt-get install parted&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/04/12/GLTotK.png" alt="GLTotK.png">&lt;/p>
&lt;p>如图所示，现在的情况不允许直接把unallocated的区间分配给sda1，因为区间不连续。移动区间步骤如下&lt;/p>
&lt;ol>
&lt;li>右击sda5(linux-swap)，点击swapoff。把🔒去除。接着进行2~4步将unallocated的区间逐步移到sda1(/)的旁边。&lt;/li>
&lt;li>右击sda2(extended)，将free space following设为0，或者拖动滑块。使得unallocated包含进sda2&lt;/li>
&lt;li>右击sda5，将free space following设为0。这时会弹出警告，点ok，忽略它。&lt;/li>
&lt;li>右击sda2，将new size设为linux-swap的大小，使得unllocated继续上移。&lt;/li>
&lt;li>右击sda1，由于空闲区间已经在旁边了，调整大小。&lt;/li>
&lt;li>点击apply all operations图标。&lt;/li>
&lt;/ol>
&lt;p>退出程序后，df -h查看。整个过程其实也没有重启。
&lt;img src="https://s1.ax1x.com/2020/04/12/GLbpQg.png" alt="GLbpQg.png">&lt;/p>
&lt;h3 id="参考资料">参考资料：&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="https://gtcsq.readthedocs.io/en/latest/linux_tools/ubuntu_lvm_extend.html">https://gtcsq.readthedocs.io/en/latest/linux_tools/ubuntu_lvm_extend.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://baike.baidu.com/item/LVM">https://baike.baidu.com/item/LVM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/hester/p/11439353.html">https://www.cnblogs.com/hester/p/11439353.html&lt;/a>
Did you find this page helpful? Consider sharing it 🙌&lt;/li>
&lt;/ol></description></item></channel></rss>