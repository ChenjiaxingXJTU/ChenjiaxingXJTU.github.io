[{"authors":["admin"],"categories":null,"content":"","date":1602028800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1602028800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/%E7%AC%BC%E9%B9%B0/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E7%AC%BC%E9%B9%B0/","section":"authors","summary":"","tags":null,"title":"笼鹰","type":"authors"},{"authors":["笼鹰"],"categories":["技术"],"content":"编译错误，npm安装失败：//web/gui:_onos-gui-npm-install failed ERROR: /home/onos/onos/web/gui/BUILD:96:1: Executing genrule //web/gui:_onos-gui-npm-install failed (Exit 1) bash failed: error executing command /bin/bash -c ... (remaining 1 argument(s) skipped) Use --sandbox_debug to see verbose messages from the sandbox Target //:onos failed to build Use --verbose_failures to see the command lines of failed build steps. INFO: Elapsed time: 1991.490s, Critical Path: 1876.35s INFO: 2419 processes: 2091 linux-sandbox, 328 worker. FAILED: Build did NOT complete successfully  解决方法参考 Google group 或 CSDN\n 单独编译以查看log bazel build //web/gui:_onos-gui-npm-install \u0026ndash;verbose_failures \u0026ndash;sandbox_debug sar -n DEV 1 2000000000000 查看网速，因为运行bazel脚本实际上就是在配置、编译和安装环境。这个过程是需要下载东西的。卡住不动要么是被墙了，要么是命令行权限或者缺少依赖的软件（用apt装一下） sudo find / -name npm-install.out cat日志发现 PhantomJS not found on PATH Downloading https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-macosx.zip Saving to /var/folders/mh/2ptfthxj2qb49jscj1b0gjsm0000gn/T/phantomjs/phantomjs-2.1.1-macosx.zip Receiving\u0026hellip; 一直卡死这，直到报错。 原因是天朝网络：它的安装过程中要去 github 下载一个包，而 github release 文件放在亚马逊 aws 上（被墙了）。解决方法是借助淘宝镜像 修改web/gui/BUILD \u0026quot; $$NPM $$NPM_ARGS install \u0026ndash;no-cache \u0026ndash;loglevel=error \u0026gt;npm-install.out 2\u0026gt;\u0026amp;1 \u0026amp;\u0026amp;\u0026quot; 的前面新增一行 \u0026quot; export PHANTOMJS_CDNURL=https://npm.taobao.org/mirrors/phantomjs \u0026amp;\u0026amp;\u0026quot; 也可以手动下载拷贝到/tmp/phantomjs下。因为每次重启电脑该目录都会被删除。 cd ~/onos/tools/dev/bin/ ./onos-gen-bazel-project \u0026gt; /tmp/onos_bazelproject    导入intellij idea出错 如果是安装错误，是网络或墙 如果是编译错误，很可能是bazel插件版本不对，intellij idea版本和插件版本有对应关系 详情见：bazle plugin version java.lang.NoClassDefFoundError: com/google/common/util/concurrent/internal/InternalFutureFailureAccess Caused by: java.lang.ClassNotFoundException: com.google.common.util.concurrent.internal.InternalFutureFailureAccess\nDid you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"686bb828b8b24f50dcdbea6b27e2ea87","permalink":"/post/onos/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/onos/","section":"post","summary":"op/bazel build onos报错","tags":["onos","bazel","npm"],"title":"bazel编译onos出错","type":"post"},{"authors":["笼鹰"],"categories":["技术"],"content":"背景 作为Linux菜鸟，每次装Linux操作系统时我都要在分区这一步上花些功夫思考：怎么划分比较合适。（我的近期需求是什么?未来可能发生变化吗？）因为在逻辑分区划分好后就很难更改了，一旦某个分区空间耗尽会很麻烦。之前用EXSI管理服务器里的虚拟机，可以直接在web控制台中动态调整其磁盘大小。如果是vmware workstation pro或者virtualbox的虚拟机一般就用gparted调整分区(这么干有点害怕搞坏，操作前我会备份一下文件到移动硬盘)。自从学习了LVM后，分区管理一下子就变容易了，直接在CLI终端操作。\n快速了解LVM 简单来说LVM就是将底层的多块物理卷PV组成一个存储池VG，用户可以在存储池上创建多个逻辑卷LV，这个逻辑卷就相当于windows下的一个C盘或者别的盘，用户可以往逻辑卷上装系统或者写数据，效果等同于写物理块上。\nLVM最关键的点就是这个逻辑卷，这是LVM好用的原因，因为LVM帮用户做好了映射。我们只需要知道LVM是利用Linux内核的device-mapper功能来实现存储系统的虚拟化，性能影响不大。LVM的很多好处都是因为有这个映射在。\nLVM最大的好处就是它可以在线（online）对逻辑卷（LV）和卷组（VG）进行创建、删除、调整大小等操作。无需重新启动服务，就可以将服务中用到的逻辑卷（LV）在线（online）/动态（live）迁移至别的硬盘上。\n当然还有些别的好处，例如允许创建快照，支持各种设备映射目标（device-mapper targets）。\n稍微深入一下LVM  MBR（Master Boot Record）（主引导记录）和GPT（GUID Partition Table）（GUID意为全局唯一标识符）是在磁盘上存储分区信息的两种不同方式。   传统的MBR分区方式最多4个主分区（3个主分区+1个扩展分区(扩展分区里面可以放多个逻辑分区)），无法创建大于2TB的分区，一般用fdisk分区工具。 GPT分区方式将不会有这种限制，一般使用parted分区；   逻辑卷管理(LVM)，是 Logical Volume Manager（逻辑卷管理）的简写，lvm是卷的一种管理方式，并不是分区工具（也可不采用这种LVM管理方式）.  LVM的基本组成部分如下：\n 物理卷 (PV) 一个可供存储LVM的块设备. 例如: 一块硬盘, 一个MBR或GPT分区, 一个回环文件, 一个被内核映射的设备 (例如 dm-crypt)。PV包含有与LVM相关的管理参数 卷组 (VG) 物理卷PV组合成一个存储池VG，作为存放逻辑卷LV的容器。 PEs are allocated from a VG for a LV. 逻辑卷 (LV) \u0026ldquo;虚拟/逻辑卷\u0026quot;存放在一个卷组中,由物理块组成。是一个类似于物理设备的块设备，例如，你可以直接在它上面创建一个文件系统文件系统。逻辑卷不必是连续的空间，它可以跨越许多物理卷，并且可以在任何时候任意的调整大小。相比物理磁盘来说，更易于磁盘空间的管理 物理块 (PE) 一个卷组中最小的连续区域(默认为4 MiB)，多个物理块将被分配给一个逻辑卷。可以把它看成物理卷的一部分，这部分可以被分配给一个逻辑卷。   简单理解一下: 有一块物理硬盘/dev/sda，我们用LVM管理它。一个卷组VG可以看成是一个虚拟硬盘，逻辑卷LV可以看成虚拟硬盘上的磁盘分区，类似于C盘、D盘。而卷组VG是由下面的多个物理卷PV组成，物理卷PV的基本组成单位是物理块PE。而逻辑与物理实体之间映射关系不用管。\n如图，50G的硬盘/dev/sda，默认只分配了4G给根目录（红色实线），后面不够用了可以动态从VG里拨空间。\n下面再来看看LVM在baidu百科上的介绍LVM(Logical Volume Manager)逻辑分卷管理器，本质上是一个虚拟设备驱动，是在内核中块设备和物理设备之间添加的一个新的抽象层次。\n扩容和分区  虚拟机关机，在宿主机的vmware界面中编辑虚拟机设置，硬件/硬盘/扩展磁盘容量。如果扩展选项是灰色的，需要删除快照或者使用vCenter Converter。如果宿主机是linux，可以用命令扩展磁盘：vmware-vdiskmanager -x 16Gb xxx.vmdk 启动虚拟机  # 查看硬盘容量 sudo fdisk -l \u0026gt; Disk /dev/sda: 21.5 GB, 21474836480 bytes # 查看文件系统 df -lh \u0026gt; 和扩容之前结果一样，因为还没有给硬盘分区 # 开始分区 sudo fdisk /dev/sda # 依次输入 m （命令提示） p （查看分区）发现有三个盘，linux类型的主分区、Extended类型的、swap类型的，blocks为盘的大小（单位kB） n （创建分区） p (设为主分区) 3 (分区id) 起始扇区 需要观察之前查看分区的硬盘分布情况，选择有足够大空间的一段 结束扇区 直接回车，默认是将这段空白存储全部分给新分区 t （修改类型，8e为lvm，83为linux） 8e w (写分区表) # 分区结束，回到终端继续操作 sudo partprobe /dev/sda sudo mkfs.ext4 /dev/sda3  lvm卷管理 sudo apt install lvm2 # 进入lvm管理 sudo lvm # 查看物理卷PV pvdisplay 或 pvscan # 创建PV pvcreate /dev/sda3 # 查看卷组VG vgdisplay -v # 创建VG，物理卷加入卷组 vgcreate vg /dev/sda3 # 创建逻辑卷LV sudo lvcreate -n lv -L 12G vg # 在LV上创建文件系统 sudo mkfs.ext4 /dev/ubuntu/lv # 逻辑卷的UUID blkid /dev/vg/lv mkdir /home/vl # 插入相应的条目/etc/fstab UUID=b85df913-580f-461c-844f-546d8cde4646 /home/vl\text4 defaults 0 0 # 挂载 sudo mount /home/vl  用df -h和pvdisplay以及fdisk -l查看结果。\n Disk identifier: 0x00000000 Disk /dev/mapper/vg-lv doesn\u0026rsquo;t contain a valid partition table\n 这个是正常的，因为vg-lv是逻辑卷。本来就不应该有分区表的。\n扩展根目录 前面是将整个虚拟机硬盘扩容，然后创建一个lvm类型的物理卷/dev/sda3，然后为它创建对应的vg，lv和文件系统格式化，并且动态调整lv的容量\n 如果安装系统时直接把lvm挂载在根，系统会自动创建lv和vg。在卷管理步骤中自己不用再创建LV和VG，只要创建PV。   # 将新增的物理盘加入根目录所在的逻辑卷 vgextend ubuntu--vg-ubuntu--lv /dev/xxx # 扩展文件系统所在逻辑卷组 lvextend -L +20G /dev/mapper/ubuntu--vg-ubuntu--lv #若提示No space left on device，考虑先暂时将本地没用的文件删除或移出到移动硬盘，扩容后移回 或者 lvextend -L +100% /dev/mapper/ubuntu--vg-ubuntu--lv #如果前面vmware新增了20G，这里新增20G到lv大概率会出错，实际能用到的空间会比之前的小一点点。不清楚，可以用百分数代替。 # 使扩容生效 sudo resize2fs -p /dev/mapper/ubuntu--vg-ubuntu--lv  如果安装系统时没有选lvm挂载根目录，桌面linux系统建议使用parted，它支持多种分区表类型，允许用户创建、删除、调整、缩减、移动和复制分区，以及重新组织硬盘的使用，复制数据到新的硬盘上。gparted 是 parted 的图形界面前端\nsudo apt-get install parted\n如图所示，现在的情况不允许直接把unallocated的区间分配给sda1，因为区间不连续。移动区间步骤如下\n 右击sda5(linux-swap)，点击swapoff。把🔒去除。接着进行2~4步将unallocated的区间逐步移到sda1(/)的旁边。 右击sda2(extended)，将free space following设为0，或者拖动滑块。使得unallocated包含进sda2 右击sda5，将free space following设为0。这时会弹出警告，点ok，忽略它。 右击sda2，将new size设为linux-swap的大小，使得unllocated继续上移。 右击sda1，由于空闲区间已经在旁边了，调整大小。 点击apply all operations图标。  退出程序后，df -h查看。整个过程其实也没有重启。 参考资料：  https://gtcsq.readthedocs.io/en/latest/linux_tools/ubuntu_lvm_extend.html https://baike.baidu.com/item/LVM https://www.cnblogs.com/hester/p/11439353.html Did you find this page helpful? Consider sharing it 🙌  ","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"42ae9caf77b032c936ffc485c3552fca","permalink":"/post/disk/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/disk/","section":"post","summary":"终于虚拟机磁盘容量不够用了","tags":["linux"],"title":"linux磁盘扩容","type":"post"},{"authors":["笼鹰"],"categories":["技术"],"content":"inport等于outport 在k=6的胖树上做网络验证的实验时，发现了一种特殊的网络不可达故障。debug定位到可疑的交换机节点。最终分析出原因是编译器在两个相连的交换机之间存在来回的流表。\n由于用mininet构造了一个简单拓扑，快速验证我的猜想：交换机不能把数据包从inport口输出。\n\n我构造了一个简单的拓扑h1-\u0026gt;s1-\u0026gt;s2-\u0026gt;s1-\u0026gt;s3-\u0026gt;h2，发icmp包时发现手动安装的四条流表，只有s1、s2上分别匹配了一次，说明数据包并没有从s2回到s1，虽然匹配到s2上的inport=1, action=outport:1的流表。 google发现将actios改为IN_PORT可以解决问题0。。\n虽然匹配了转发规则但是数据包却被丢弃的原因是OpenFlow 要求交换机不要把数据包从 ingress端口发出。貌似是为了避免转发环路出现。但是有时候确实有这个需求，而且不会造成问题。具体可以从链接中进去openflow论坛了解。\nmininet配置网关 ping不在一个网段的主机，包会转到子网的网关。而目前没有针对两个网段设置网关。\n#修改host ip py h1.setIP('10.0.0.11/24') py h2.setIP('10.0.1.22/24') #查看路由表 h1 netstat –rn或route(慢) #给h1配置默认网关（ip） h1 route add default gw 10.0.0.1 (h1-eth0) #给h1配置静态arp表(默认网关的mac填host2) h1 arp -s 10.0.0.1 00:00:00:00:00:02 h2 route add default gw 10.0.1.1 h2 arp -s 10.0.1.1 00:00:00:00:00:01 #查看arp表 h1 arp -a或-n  sudo tcpdump -e -vv -i s1-eth1（-vv详细报文信息，-e显示mac，–i指定监听的端口）\nh1 ping –c 1 h2 由于不是一个网段的，icmp报文的mac填的是网关的mac。\n清空arp h1 arp -n|awk '/^[1-9]/{print \u0026quot;arp -d \u0026quot; $1}'|sh -x h2 arp -n|awk '/^[1-9]/{print \u0026quot;arp -d \u0026quot; $1}'|sh -x  ping不通是因为 h1-eth0会发送ARP包获取网关的mac，而当前网关地址不存在对应设备，因此ICMP封包前获取不到目标地址信息，而导致网络不可达。\n（如果实验连接了控制器，可以通过控制器获得目标地址的信息，如OpenDaylight利用它预设的ARP Proxy。）\n让ovs的两个端口成为网关\nmininet\u0026gt; s1 ifconfig s1-eth1 10.0.0.1/24 mininet\u0026gt; s1 ifconfig s1-eth2 10.0.1.1/24  配置流表让arp和icmp消息得到转发\n处理ARP请求 当网管的ARP流到来后，将其交给本地的OVS处理。 mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=0,priority=65535,arp,arp_tpa=10.0.0.1 actions=LOCAL\u0026quot; mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=0,priority=65535,arp,arp_tpa=10.0.1.1 actions=LOCAL\u0026quot; 处理ARP应答 该应答回复目标地址的出口，比如将目标网络10.0.0.1的包通过出口端口1抓发出去。端口信息可以查询如下： mininet\u0026gt; sh ovs-vsctl -- --columns=name,ofport list Interface name : \u0026quot;s1-eth2\u0026quot; ofport : 2 name : \u0026quot;s1-eth1\u0026quot; ofport : 1 name : \u0026quot;s1\u0026quot; ofport : 65534 处理应答的流表如下： mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=0,priority=1,arp,nw_dst=10.0.0.1,actions=output:1\u0026quot; mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=0,priority=1,arp,nw_dst=20.0.0.1,actions=output:2\u0026quot; 对ICMP的请求进行处理。 为了使得流表表达更清晰，我们将ICMP路由的处理放在另外一个table处理。 也就是在table0中设置一个最低优先级的流，将非ARP的包丢给下一个流表处理。 mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=0,priority=0,actions=resubmit(,1)\u0026quot; 在table(1)中，OVS的角色有点像router，我们需要修改ICMP封包的目标MAC地址。 mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=1,icmp,nw_dst=10.0.0.1,actions=mod_dl_dst=00:00:00:00:00:01,output:1\u0026quot; mininet\u0026gt; sh ovs-ofctl add-flow s1 \u0026quot;table=1,icmp,nw_dst=20.0.0.1,actions=mod_dl_dst=00:00:00:00:00:02,output:2\u0026quot;  ##用Linux命令搭建sdn网络\n# Create host namespaces ip netns add h1 ip netns add h2 # Create switch ovs-vsctl add-br s1 # Create links ip link add h1-eth0 type veth peer name s1-eth1 ip link add h2-eth0 type veth peer name s1-eth2 ip link show # Move host ports into namespaces ip link set h1-eth0 netns h1 ip link set h2-eth0 netns h2 ip netns exec h1 ip link show ip netns exec h2 ip link show # Connect switch ports to OVS ovs-vsctl add-port s1 s1-eth1 ovs-vsctl add-port s1 s1-eth2 ovs-vsctl show # Set up OpenFlow controller ovs-vsctl set-controller s1 tcp:127.0.0.1 ovs-controller ptcp: \u0026amp; ovs-vsctl show # Configure network ip netns exec h1 ifconfig h1-eth0 10.1 ip netns exec h1 ifconfig lo up ip netns exec h2 ifconfig h2-eth0 10.2 ip netns exec h2 ifconfig lo up ifconfig s1-eth1 up ifconfig s1-eth2 up # Test network ip netns exec h1 ping -c1 10.2  mininet主机互相发包 在mininet/mininet/中的net.py中添加函数：\ndef sendMulti(self, number, period, times): times=int(times) #os.system(\u0026quot;ls\u0026quot;) while (times): base_port = 5001 host_list = [h for h in self.hosts] _len = len(host_list) for i in range(0, _len): client = host_list[i] for j in range(0, _len): server = host_list[j] if (i != j): client.cmd(\u0026quot;/home/cjx/ubuntu/mininet/sends\u0026quot; + ' ' + server.IP() + ' ' + number + ' ' + period) base_port += 1 times = times - 1  在mininet/mininet/中的cli.py中添加函数：\ndef do_sendmulti(self, line): \u0026quot;\u0026quot;\u0026quot;Multi iperf UDP test between nodes\u0026quot;\u0026quot;\u0026quot; args = line.split() if len(args) == 3: udpBw = args[0] period = args[1] times = args[2] err = False self.mn.sendMulti(udpBw, period,times) else: error('invalid number of args: sendmulti udpBw \\n' + 'udpBw examples: 1M\\n')  在mininet/bin/mn文件中两处修改：\nTESTS = { name: True for name in ( 'pingall', 'pingpair', 'iperf', 'iperfudp', 'sendmulti' ) } ALTSPELLING = { 'pingall': 'pingAll', 'pingpair': 'pingPair', 'iperfudp': 'iperfUdp', 'sendmulti': 'sendMulti'}  send.c发包源文件编译成执行文件\nint main(int argc, char** argv) { ///必须有目的ip的参数 if(argc != 4) { printf(\u0026quot;usage: send [ip] [number] [time interval(ms)]\\n\u0026quot;); return -1; } ///根据参数组合出目的主机的ip地址 char dst_ip[20]; sprintf(dst_ip,\u0026quot;%s\u0026quot;,argv[1]); int times = atoi(argv[2]); int time_interval = atoi(argv[3]); time_interval*=1000; /// 初始化本机地址 struct sockaddr_in my_addr; memset(\u0026amp;my_addr,0,sizeof(my_addr)); my_addr.sin_family = AF_INET; //Address family 指定为ipv4 my_addr.sin_addr.s_addr = INADDR_ANY; ////INADDR_ANY表示自动获取本机地址 my_addr.sin_port = htons(8889); ///端口号（本机的端口好表示用于发送的端口号） ///初始化目的主机地址 struct sockaddr_in dst_addr; memset(\u0026amp;dst_addr,0,sizeof(dst_addr)); dst_addr.sin_family = AF_INET; dst_addr.sin_addr.s_addr = inet_addr(dst_ip); dst_addr.sin_port = htons(8888); ///创建套接字 int sockfd = socket(AF_INET,SOCK_DGRAM,0); if(sockfd == -1) { perror(\u0026quot;create socket failed\\n\u0026quot;); return -1; } ///绑定端口 if(bind(sockfd,(struct sockaddr*)\u0026amp;my_addr,sizeof(my_addr)) == -1) { perror(\u0026quot;bind failed\\n\u0026quot;); return -1; } unsigned char buf[16]; int i = 0; for(i=0; i\u0026lt; 16; i++) { buf[i] = 0xff; } ///发送数据包 for(i=0; i\u0026lt;times; i++) { usleep(time_interval); // sleep(1); printf(\u0026quot;sending packet %d to %s\\n\u0026quot;,i,dst_ip); if(sendto(sockfd,buf,sizeof(buf),0,(struct sockaddr*)\u0026amp;dst_addr,sizeof(dst_addr)) == -1) { perror(\u0026quot;send failed\\n\u0026quot;); return -1; } } close(sockfd); }  Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"82d336dbabd79f54490667e88f31dc85","permalink":"/post/ovs/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/ovs/","section":"post","summary":"ovs踩坑","tags":["ovs","openflow"],"title":"ovs问题总结","type":"post"},{"authors":["笼鹰"],"categories":["技术"],"content":"Routeflow 在openflow网络之上提供虚拟IP路由服务的平台。它依赖于POX,OpenFlow,MongoDB,OVS,Quagga\n https://github.com/routeflow/RouteFlow 官方代码  第三方代码  https://github.com/chesteve/RouteFlowVM 虚拟机 https://github.com/call518/SDN-TEST ONOS OpenDaylight Routeflowd等 https://github.com/hungys/RoutingFlow(在Ryu上实现RIP,OSPF路由协议)  三大核心组件  RFClient : 运行在VM（准确说是lxc容器）中的守护程序，监测Linux ARP ,路由表的改变。如果有更新，路由信息会被发送给RFserver。 RFServer : 一个独立的app，用来连接并管理运行在VM中的RFClient实例。RFserver负责维护RFclient实例、接口和对应交换机、端口的映射关系。它也和与RFproxy连接，来配置流表 RFProxy ：POX的一个app,通过openflow协议与ovs交互，监听RFserver的指令，  VM（RFclient）和OVS的映射关系 配置被存储在MongoDB一个集合中\n VM 和OVS的映射关系 virtual interface和交换机端口的映射关系beyond 1:1 多个控制器管理网络     格式 类型     vm id, vm port, -, -, -, -, - 闲置的client port   -, -, -, -, dp id, dp port, ct id 闲置的datapath port   vm id, vm port, dp id, dp port, -, -, ct id client-datapath映射关系   vm id, vm port, dp id, dp port, vs id, vs port, ct id 激活的 client-datapath   其他与虚拟交换机相关的域 (vs_*)在运行时定义. The ct_id field 标识交换机连接的控制器.(此机制允许多控制器）     状态图： 当交换机连入网络，RFproxy会告知RFserver交换机的每个物理端口。这些datapath端口被server注册作为空闲的datapath端口或作为client-datapath关联；前者发生的条件是要么正在被注册的datapath端口没有configuration，要么已配置的client端口（与此datapath端口关联）尚未注册。 后者发生的条件是在client端口（基于the configuration与此datapath关联）被注册为空闲。\n当一个RFclient启动，他会告诉server它的端口。这些client端口被server注册作为空闲的client端口或client-datapath关联。和上文的datapath端口行为描述类似。\n关联之后，RFserver要求client触发一个消息，这个消息将通过client连接的虚拟交换机到达proxy。这样proxy能感知client和虚拟交换机之间的连接，通知server。 然后server决定怎么处理这个信息。一般地，proxy会被命令重定向所有从虚拟交换机到与它关联的物理交换机的流，and vice-versa（反之亦然）.\n当交换机断开网络，它的端口从所有涉及到的关联中移除，留下空闲的client端口。如果datapath回来了，系统将把它当作新的datapath，如上文描述.\nLXC简介 Linux Container容器是一种内核虚拟化技术，简称LXC。提供轻量级的虚拟化，以便隔离进程和资源，使用 LXC 的优点就是不需要安装太多的软件包，使用过程也不会占用太多的资源。LXC 在资源管理方面依赖 Linux 内核的 cgroups （Control Groups） 系统，cgroups 系统是 Linux 内核提供的一个基于进程组的资源管理的框架，可以为特定的进程组限定可以使用的资源。\nlxc常用命令 1. 安装lxc apt-get -y --force-yes install lxc 2. 检查 lxc-checkconfig 如果所有项目显示“enabled”则OK 3. 根据模板创建容器 lxc-create -t ubuntu -n base #-n是容器的名字;-t 是容器的模板（模板的保存路径是：/usr/lib/lxc/templates/==模板都是一个脚本文件，执行了一系列操作，包括创建容器的时候挂载文件系统，配置网络，安装必要软件，创建用户/属组，设置密码等= 4. 启动 LXC 虚拟计算机 lxc-start -n testA 确认账号和密码后登录虚拟计算机 6、列出当前所有的容器 lxc-ls 7、使用 console 登入容器 lxc-console -n testA –t 3 8、停止运行一个容器 lxc-stop -n testA 9、获取一个容器的状态 lxc-info -n ol6ctr1 10、把一个容器销毁 lxc-destroy -n testA1 11、复制一个容器 lxc-clone -o testA -n ol6ctr2 12、暂停或恢复一个容器 lxc-freeze -n testA lxc-unfreeze -n testA 13、修改 LXC 网络接口 vi /etc/default/lxc 14. 用户修改后要重新启动网络服务 service lxc-net restart  实验 编译rfclient make rfclient  #make build -\u0026gt; lib -\u0026gt; rfclient:\n编译rflib/ipc, rflib/types, rfclient/. 目录下的文件到 build/\n./Makefile export ROOT_DIR=. export BUILD_DIR=./build export LIB_DIR=./rflib export MONGO_DIR=/usr/local/include/mongo # 编译产物存放目录 export BUILD_LIB_DIR=./build/lib export BUILD_OBJ_DIR=./build/obj export libdirs := ipc types （rflib下的两个目录）  创建LXC容器：切到rftest目录,执行./create create脚本内容：\n 容器创建路径/var/lib/lxc apt安装lxc 创建默认LXC容器base  lxc-create -t ubuntu -n base -n是容器的名字;-t 是容器的模板（在/usr/lib/lxc/templates/里，模板就是一个脚本文件，内容包括创建容器的时候挂载文件系统，配置网络，安装必要软件，创建用户/属组，设置密码等==）  安装quagga、tcpdump到容器  chroot $LXCDIR/base/rootfs apt-get install #chroot命令用来在指定的根目录下运行指令  基于刚刚创建的base容器和rftest/conifg下的容器配置文件，克隆其他LXC容器  1)rftest1 创建3个LXC容器b1(172.31.1.2)、b2(172.31.2.2)、rfvm1（192.169.1.100）其中rfvm1分别配两个interface与b1,b2连接。设法使rfvm1充当网关（路由器），使得b1 能ping 通 b2。 RF中的一台虚拟机充当openflow交换机，这台虚拟机中路由表和arp表发生任何事，都被复制到交换机。 RFClient负责监听这些表的事件并且通知rfserver。 因此要部署一台LXC容器,另配一个iface作为管理接口连接这个RFclient和其他\nconfig文件: 此文件是所有setup的基础，根据情况修改名字和hwaddr\n第一个iface(rfvm1.0)的hwaddr将被用为RFclient的ID.\nlxc.utsname = rfvm1 lxc.network.type = veth lxc.network.flags = up lxc.network.hwaddr = 12:a0:a0:a0:a0:a0 lxc.network.link=lxcbr0 lxc.network.type = veth lxc.network.flags = up lxc.network.veth.pair= rfvm1.1 lxc.network.hwaddr = 12:a1:a1:a1:a1:a1 lxc.network.type = veth lxc.network.flags = up lxc.network.veth.pair = rfvm1.2 lxc.network.hwaddr = 12:a2:a2:a2:a2:a2 ... lxc.rootfs = /var/lib/lxc/rfvm1/rootfs lxc.mount = /var/lib/lxc/rfvm1/fstab  rootfs和mount不用修改。容器的位置一般在 /var/lib/lxc /etc/sysctl.conf 中开启IPv4转发，让rfvm1作为网关，关闭quagga /etc/rc.local调用root/run_rfclient脚本开启RFclient实例。\n==ReadMe==：All these customizations, when structured like in the rftest/config/rfvm1 folder will be read the the rftest/create script, that will create any number of LXC containers based on a basic template.\n执行./rftest1 此脚本必须被root用户执行。\n一、重置环境:\nreset 1： 初始化ovs:删除dp0,switch1网桥 初始化VMs：lxc关机，删除vm路径下的rootfs/var/run/network/ifstate 断开mongodb，删除数据rfvm1路径下的rootfs/opt/rfclient trap \u0026quot;reset 0; exit 0\u0026quot; INT #当脚本程序收到INT命令（被中断时），执行reset 0; exit 0完成清理工作 配置容器的管理接口：ifconfig lxcbr0 $MONGODB_ADDR(192.168.10.1) up sed -i \u0026quot;/bind_ip/c\\bind_ip = 127.0.0.1,$MONGODB_ADDR\u0026quot; $MONGODB_CON #用bind_ip=127.0.0.1,192.168.10.1取代bind_ip行 重启mongodb wait_port_listen $MONGODB_PORT(27017) # 阻塞执行直到在指定端口监听到一个socket开启。 # MongoDB服务器：监听此网桥，确保容器能连接到 Routeflow架构。  二、配置LXC 容器rfvm1作为RFclient运行\n新建rfclient目录 mkdir /var/lib/lxc/rfvm1/rootfs/opt/rfclient 复制rfclient可执行程序 cp build/rfclient /var/lib/lxc/rfvm1/rootfs/opt/rfclient/rfclient 创建脚本run_rfclient.sh在/var/lib/lxc/rfvm1/rootfs/root下用于启动RFclient （脚本内容：sleep 5 /opt/rfclient/rfclient\u0026gt; /var/log/rfclient.log） 启动pox #作为控制器app的RFproxy也随之启动,控制器日志等级设为INFO wait_port_listen $Contorller_PORT(6633) 启动rfserver ./rfserver/rfserver.py rftest/rftest1config.csv \u0026amp; # rftest1config.csv是vm_id,vm_port,ct_id,dp_id,dp_port映射表 启动容器并登录：lxc-start -n rfvm1 -d  三、连接容器到正在运行数据库服务的hosts\novs添加网桥dp0，端口rfvm1.1，rfvm1.2,dpid=7266767372667673 dp0连接控制器：ovs-vsctl set-controller dp0 tcp:127.0.0.1:$CONTROLLER_PORT（6633） 启动hosts（容器b1、b2) ovs添加网桥switch1,端口b1.0、b2.0，dpid=99 switch1连接到控制器  在host创建ovs网桥，连接容器的管理接口（rfvm1的eth0） br0，192.169.1.1，这个地址被写死在rflib/defs.h（给RFclient和NOX-RFproxy以及RFserver和POX-RFproxy） 四、登录到容器host1 lxc-console -n b1（用户名密码都是ubuntu） 在b1（172.31.1.2）里ping -c 3 172.31.2.2（b2）\nping通的原因： rfserver维护映射表\n   vm_id vm_port ct_id dp_id,dp_port     12A0A0A0A0A0 1 0 99   12A0A0A0A0A0 2 0 99   容器id是12A0A0A0A0A0，它的接口eth1对应dpid（switch）的接口1,      接口eth2对应dpid（switch）的接口2       Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"c291d285a583463201f2081f9eff3760","permalink":"/post/routeflow/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/routeflow/","section":"post","summary":"用RouteFlow在SDN网络中实现路由器","tags":["ovs","openflow"],"title":"RouteFlow","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"在华尔街，圆桌会议是个很常见的词汇，那是一个与外界隔绝的闭门会议，用来描述年终评估过程，主管、评估分析师等高层围着桌子，决定你为高档/中档/抵档。\n精英体制备受众多公司推崇，怎么理解这个概念。朴素的讲就是，公司的负责人会说，我们的企业文化、我们的流程，都是最精英的。你要想在这样的公司出类拔萃，那你就必须是聪明的，你得埋头苦干，勤勤恳恳。\n但其实当人为因素参与到了评估过程中，就无法拥有百分百完美的精英环境。因为人为会让它有主观的因素。如果有人在闭门会议中，代表我，为我发言，很可能也会让那些围着桌子的其他决策者会对我作出有利的评判。那个为我说话的人称为举荐者[sponser]。他不是导师[mentor]，因为导师的工作是为你提供指导性的意见。他也不是拥护者或者支持者，因为不必花任何金钱去成为某人的冠军，而且拥护者一般不会有权力参加那个会议或者因为要避嫌。\n 举荐人是花费大量的政治和社会资源在你身上，将在圆桌会议上代表你推销你的人，这就是举荐人。他是打心里想为你争取最大利益的人，并且有权力。\n 为什么需要举荐人？因为任何评估过程都有人为因素，也就是说一切都有主观因素影响。\n如何争取举荐人？\n 绩效。绩效取决于如何完成你被要求的工作，以及一些额外的，超额完成的。每次你高于人们的期待，完成一项任务的时候，你的声誉会提高，你更容易被领导注意到，更容易赢得举荐人。因为人人都喜欢和优秀的人共事。 人际关系。当你和另一位候选人资历看上去差不多，绩效也差不多，但是机会只有一个，这个时候起决定性作用的将是人际关系。即你在工作环境中做的人际投资。如果你从来没和那些高层有任何互动，别人不可能把他们辛苦赚来的个人影响力白白浪费在不熟悉的人身上。所以你需要主动花时间与他们建立联系，去互动，去了解这些人；更重要的是，给他们了解你的机会！  如何识别一个举荐人？\n 他要在决策桌上有一席之地，最好有点权势。 他要了解你的工作成果，从而在会议中有可信度。  怎么开口向举荐人请求？\n 今年我真的超级想得到晋升的机会，我有着如此非凡的一年，我已经尽我所能，向公司证明我的价值，我已为晋升做足了准备，但我了解到我需要有人在闭门会议中，为我说话。你了解我，了解我的工作以及客户积极的反馈，所以我真心希望，你愿意为我辩护。\n 如果他拒绝了你，有三种可能：\n 他不认为自己对你的工作有足够的了解，因此在闭门会议中他没有足够的可信度来有效的为你争取利益。 你其实没有那么大的权力为你辩护，并且他也不想承认这点。 他不喜欢你，可能是不认同你的工作能力，可能是不喜欢你这个同事。  不要害怕被拒绝，这个经历会使你在下一次请求举荐人时表现的更好。没有举荐人，很难在公司获得晋升。所以你要经常想”谁是那个带着我的文件走进房间的人“，如果还回答不上来的话，建议转移少许埋头苦干的精力去投资一段举荐人的人际关系吧，因为这对你的职业生涯起到很重要的作用。\n最后对未来的举荐人们提一个建议：如果你有幸被邀请进闭门会议，证明你拥有了一席之地。如果你有一席之地，那么你就有发言的责任。别浪费自己的精力去担心人们会说什么，不管他们是否会认为你在支持某人，只是因为他们与你相似。\n“如果有人值得你花费自己的影响力，那么就花在他身上吧！在华尔街的几十年里，我学到了一件事：想要增长你势力的唯一方式就是去给予它。你的声音就是你力量的核心！use it！”\n 视频链接：how to find the person who can help you get ahead at work\n Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"17b1f62dd40dbde518cb19f9cf76dae0","permalink":"/post/sponsor/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/sponsor/","section":"post","summary":"在华尔街，圆桌会议是个很常见的词汇，关起门来决定员工升降去留的高层会议，主观原因之外的影响结果的因素","tags":["TED","认知升级"],"title":"TED笔记:找到你的伯乐","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"发现：我不够好的心态阻碍人与人之间的联系 人与人之间的联系是我们从事所有社会活动的原因，因为连接赋予了我们生活的目的和意义。而打破连接的是耻辱感[shame]和害怕[fear]。想想看有没有一些事情，如果被别人知道了或看到了，会认为我不值得来往。我们都经常会有这种想法：我不够白，我不够瘦，我不够漂亮，我不够聪明，我不够晋升。。。\n有一天主管找你谈话，他跟列举了37件你做得好的事，但是仍然存在一个“增长空间”。谈话结束人们往往满脑子只会想刚才主管说的那个自己做的不够好的地方。有些人会因为这个所谓的“增长空间”而感到羞耻，变得脆弱。因为自己的缺点被其他人知道了或者看到了，而且还是自己的老板，他们开始怀疑自己的价值。“我不够好”但是我不想让别人知道，我越不跟人诉说，这种感觉反而越强。\n滋生耻辱感的是一种我不够好的心态。而支撑这一点的是与生俱来的脆弱感[vulnerability]，它往往难以忍受、刻骨铭心。即脆弱感是羞耻和恐惧的核心。\n研究阶段I：脆弱的本质是不相信自己的价值 为了克服耻辱感，布琳.布朗做了6年的研究，以求深入挖掘耻辱感。第一个阶段，她把采访过的人粗略地分成具有价值感[worthiness]的人(他们勇于去爱并且拥有强烈的归属感)和为之苦苦挣扎的人(他们总是怀疑自己不够好)。区别这两种人的变量只有一个：是否真正相信自己的价值(值得被爱，值得享有归属感)。\n由此，我们可以说，阻碍人与人之间连结的是我们对于自己不值得享有这种关系的恐惧。为了更深入了解它，\n研究阶段II：勇敢的人拥抱自己的脆弱 第二个阶段，布琳找出了所有采访记录，找出那些表现出强烈自我价值感的采访记录，集中研究它们。这群全心全意，靠着一种强烈的自我价值感生活的人们有什么共同点？\n 勇气。courage这个词源于拉丁语cor，意为心脏。这些人拥有承认自己不完美的勇气。他们愿意放开自己设定的那个理想的自我，这是赢得人际关系的必要条件。善待自己才能善待别人。 全然接受脆弱。他们相信让他们变得脆弱的东西，也会让他们变得美丽。他们不认为脆弱是寻求舒适，也不认为脆弱是钻心的疼痛。他们只是认为脆弱是必须的。他们愿意说出“我爱你”，愿意为情感投资，无论有没有结果。他们觉得这些都是最基本的。  布琳对这个结论很奔溃，因为脆弱是耻辱和恐惧的来源、是怀疑自我价值而挣扎的根源，但脆弱同时也是归属感、爱的源泉。spiritual awakening。布琳的心理医生开导她，“崩溃”其实是一种“灵魂觉醒”。\n研究阶段III：麻痹脆弱是有害的 布琳再次投入到研究中，进入第三个阶段，又花了几年去真正理解那些全身心投入生活的人，他们如何应对脆弱？\n结论是我们麻痹[numb]脆弱。\n 但问题是我们无法选择性的麻痹消极的情感。所以我们麻痹脆弱时，我们也会麻痹其他情感包括快乐、幸福、感恩。因此我们需要思考我们为什么和怎么样麻痹自己的。 麻痹脆弱的另一种方式是我们把不确定的事认为变得确定的。例如把宗教从不确定性变为真实确定的，例如我是对的，你是错的，所以你闭嘴。这就是当今政治的现状：没有讨论、没有对话，只有指责。研究人员把指责描述为一种发泄痛苦和不快的方式。  我们追求完美。但这是不可行的。它只会把屁股上的赘肉转移到脸上！。现在有很多父母抱起刚出生的小孩就觉得自己要保证小孩能够变得完美，并且在小孩成长的过程他们也会要求孩子变成自己期望的那样完美。这是错误的，父母的任务不是告诉小孩要变完美，而是注视小孩的成长，告诉他你天生就不完美，你注定要奋斗。但更重要的是你值得被爱，值得拥有归属感。\n我们在工作和生活上假装自己的行为不会影响他人。这是不对的处理方式，其实别人更想要的是你的道歉并且看见你接下来的行为。\n结论：接受自己的脆弱之处，拥抱它，让它被看见 卸下我们的面具，让我们被看见，即便是脆弱的一面，全心全意的去爱，尽管没有任何担保。\n告诉自己已经做得足够好了，对自己是，对他人也是，这样就能停止抱怨，对周围的人更加友善更加温和。\n 视频链接：the power of vulnerability\n Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"c32390ff61666a3a67d5a808138ab7cc","permalink":"/post/weakpower/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/weakpower/","section":"post","summary":"布琳.布朗致力于研究人与人的联系，在TEDx休斯敦一次富有感染力的幽默谈话中，她分享了她的研究发现","tags":["TED","认知升级"],"title":"TED笔记:脆弱的力量","type":"post"},{"authors":["笼鹰"],"categories":["技术"],"content":"hexo站点打开显示HSTS问题 今天访问自己的博客网站时，浏览器并没有直接出现博客首页，而是出现了HSTS的页面（这里猜测应该是证书出了问题）。 使用chrome://net-internals/#hsts删除域名的安全策略。刷新后，点击访问不安全的网站，才进入了博客首页。但是发现浏览器的地址栏左侧显示红色的不安全，点击查看详情果然是证书有问题。\n这里得简要说明一下博主的网站搭建方式：是用hexo搭建的静态网站，源码托管在github上，采用travis CI进行持续部署与集成，即当此github项目更新时travis CI会执行.travis脚本的命令， 自动进行hexo的重新构建并部署，把生成的前端代码作为项目一式两分提交到github和coding托管。 分别启动coding和github的page服务，并且强行开启HTTPS。这时候通过.github.io和.coding,me就能访问了。 然后万网申请了一个域名，分别回到coding和github配置page服务绑定自定义域名。 然后在网站DNS解析控制台配置国内外分流，即国内ip访问域名进入的是coding的page，国外ip访问的是github的page。结束。\n所以现在网站出现问题，首先验证一下猜测。于是浏览器切换到代理模式，刷新博客首页，一切正常。这说明仅仅是coding的page服务出现了问题。于是访问coding发现page设置里的SSL/TLS安全证书状态显示错误。我先点击了申请，重试，仍然是错误，鼠标放到错误上显示的详情是urn:acme:error:unauthorized invalid response from [http://exmaple.com/.well-known/acme-challenge/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx]\n分析 查阅coding的自定义域名的帮助文档后才知道这是无法获取正确的域名验证信息。可能有两种原因：\n DNS 的 CNAME 记录是否设置正确 域名的 DNS 将海外线路解析到 Coding Pages 的服务器  考虑到之前网站访问都正常，一直没有修改过DNS设置，所以不太可能是第一个原因。按照第二个原因推测可能是coding证书过期了，重新申请的时候域名解析没有使用正确的分线路解析。注意到上面的xxxxxx中包含一个IP地址。这个很可能是网站提供page服务的服务器地址。于是ping .github.io和.coding.me查看域名服务器的ip，发现果然。那个ip正好是.github.io的域名ip。这就可以解释了，coding的证书申请，返回的却是github的地址。所以域，。\n找到问题所在后，控制台，先暂时将解析到github的两条记录暂停，只返回coding Pages界面，再回到coding重新申请证书。提示30分钟只能申请一次。好吧。于是把这个添加到TODO List。后面回来申请SSL/TLS安全证书的状态就变成了正常。\nAcademic theme for Hugo  更新主题失败  在脚本update_academic.sh的view_update中加入git submodule init即可 2. 关于academic主题绝大多数问题都可以在hugo-academic-issues中得到解答。不得不承认这是hugo里维护最好的一个项目，没有之一。\nDid you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"50c5f0366dd809632c0e255ee6d27271","permalink":"/post/website/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/website/","section":"post","summary":"关于hexo和hugo","tags":["web"],"title":"个人博客维护出现的问题","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"人生真正重要的问题，都没有标准答案，都只是取舍和选择。如果以生活中的一部分为中心，生活就会跑偏。例如以家庭为中心，会失去精彩的人生；以事业为中心，会失去幸福的家庭，以独立为中心，会失去与他人的协同作。\n美国著名的管理学大师，被《时代》周刊评为“25位最有影响力的美国人之一”的史蒂芬·柯维提出生活要以原则为中心，构建自己的习惯\n其最著名的书《高效能人士的七个好习惯》讲述了7个大原则：\n 积极主动、以终为始、要事第一 ：依赖性人格——》独立型人格 双赢思维、知彼解己、统合综效：-》互赖型人格、 不断更新 -》螺旋式上升  积极主动 思维定式是指脑子里被预先植入了一个概念，有时是社会惯性、有的是个人经验，如果不对自己的思维定式进行反思和改进，人永远不会有改变。举三个思维定势的例子\n信息不全 一天乘地铁，看见有个孩子一直吵闹，孩子的父亲却坐在那发呆。很生气就对男人说，麻烦你管教一下孩子，这是公众场所。孩子的父亲突然惊醒说，哦，对不起，孩子的妈妈今天去世了，我们刚从医院出来，所以孩子可能跟我一样，我们都有点手足无措。\n这里由于信息不全，仅凭自己看到的部分信息和自己的个人经验就妄加评论，其实就陷入了思维定式。很多微博上的网友都会犯这个错误，没有职业素养的记者在报导的时候也会这样，以前看过两篇写的好的文章叫《你不知我的苦，请别指责我的路》《你不了解我的苦，就别劝我大度》。我们经常会犯两个错，第一个是不了解清楚情况就下结论。第二个是管不住自己的嘴随便干涉、议论和评价他人的行为。\n被害者心态 生活中很多事情会让我们烦恼。但其实学会思维转换，这世上就没有任何能伤害到你的内心。有个广为流传的故事，罗斯福东西被偷了，他却说我觉得很庆幸，因为第一他们只是偷了东西没有伤人，第二他们只是偷了一部分的东西，没有偷走所有东西，第三偷东西的人不是自己。\n还有个更普遍的例子，那就是工作。大多数人的工作观都是把工作当成不可不做之恶，是由于生活所迫才去上班。但其实这么想一辈子都会很痛苦，因为人一生的时间，占比最大只有两件事，第一是睡觉第二是工作，讨厌工作简直是在否定自己的人生。推荐看看稻盛和夫的《活法》与《干法》两本书篇幅不长，一周就能看完了。\n社会惯性 积极主动的思考，才能成为一个自由的人。所谓的自由就是指无论何时何地何种情况，人都有自己选择的权力，在佛法里自由指的是打破社会的惯性。其实我们做的很多事情，并不是自发的，而是受到某些因素的控制。我们很多时候往往会自己主动放弃选择的权力，让自己成为被动者，夸张一点说就是奴隶或者受害人。\n比如普通家庭出身的年轻人刚毕业就想着买房，这使得他们不敢想创业的事情，因为他们要存钱买房，给别人打几十年工还清房贷。单薄的存款使得他们不能承受任何创业的风险。从新东方出来创业的古典在《拆掉思维的墙》里说，普通的年轻人买房其实是在贩卖梦想。买房无非两种途径，一种是双方父母出钱资助，这种人的前途和发展基本上被父母控股。经济不独立就一定意味着梦想不独立——你住着别人的房子，还有什么好说的？ 第二种人是牺牲了太多的发展机会，典当梦想来成就一套房子。我们凭什么要一毕业就结婚？一结婚就买房？而且还要为之卖出我们的发展与梦想？仅仅因为别人都这么干或者父母想我们这么干，所以我必须这么干，不然脆弱的自己很难承受外在的压力。房地产大佬王石曾说对于那些事业没有最后定型，还有抱负、有理想的年轻人来说，40岁之前租房为好。除了富二代，几乎所有创业的大佬都在年轻时选择把财产用在投资和创业上，而不是买房：罗振宇创业做“得到”，就把自己北京的房产给卖了。高晓松和自己的妹妹没有买房，周游世界，想住哪就住哪。巴菲特当年也是裸婚，选择租房而把存的钱用于创业。这些人的成功不可缺少的是他们都找到了能支持他们并为此承受风险的伴侣。\n比如家庭剧里经常看到职场女性为了家庭放弃自己的梦想，甘当家庭主妇。但是过了十年或者二十年，往往发现自己很悲惨。在家庭、社交圈自己说话越来越没有分量。自己的人生也变得平淡乏味了，失去了以前的种种可能性。这都是为了孩子。这都是为了孩子，真的挺讽刺的，这并不是个人问题其实是社会问题，既然自己不想生小孩为什么非要生小孩呢？既然没时间养小孩，为什么非要自己养呢？很多人都从来没想过这个问题，因为他们天生认为这是自己的使命，然后人生就被套牢了。\n在社会惯性中，想做自己，既需要很大的勇气，也需要自己有能力。这点特别佩服王菲。\n我的原则与习惯\nDid you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"2994c4d6598ffeaf946923b06efa469f","permalink":"/post/principles/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/principles/","section":"post","summary":"很多人感慨道理都懂却做不到，原因是因为没有形成习惯。习惯=知识+技巧+意愿=我知道怎么做+我会做+我想做。先明确原则，然后形成习惯，建立肌肉反应","tags":["原则","习惯"],"title":"以原则为中心构建习惯","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"薛兆丰：商业是最大的慈善。 商业行为，由于市场机制协调和鼓励人们分工合作，大幅持续而高效的改进了人们的福利，降低商品价格，从根本上大幅度地改善了我们的生活。世界扶贫组织多年行善扶贫，难见成效的四大原因：\n 缺乏反馈机制，怎样行善才是有效率的。 委托代理问题。花的不是自己的钱，认真程度大打折扣。 所托非人问题。很多贫穷是由政府造成，把钱给这些政府，适得其反的效果。 养懒汉效应。扶贫会造成人的依赖和惰性。只希望持续获得援助。  TED笔记：重新思考慈善事by Dan Pallotta  视频链接：the way we think about charity is dead wrong\n 商业并不能完全解决慈善问题，例如发展障碍关怀中心（a center for the developmentally disabled）那的人想要获得的是快乐和爱。这是慈善组织或非营利性部门的作用所在。\n为什么慈善组织这么多年并未真正大幅改善现状？因为这些社会问题太大，公益组织相比起来太渺小了，我们的观念正在限制公益组织的发展。\n我们一直把营利组织和非营利组织区分开，这是种族歧视。表现在五个方面：\n 人员薪酬。营利组织，你产出越多，收入越多。非营利组织不会用高报酬来激励社会服务人员提高产出。我们会为在帮助他人的过程中为自己赚钱的行为有种本能的厌恶。但是我们对那些在为自己赚钱的过程中没有帮助他人的人感到厌恶。比如，你先通过向孩子兜售暴力游戏来赚5千万美元，没问题，我们会让你上《Wired连线》杂志封面。但是如果你先通过为得了疟疾的孩子们提供医疗服务，并只想赚50万美元时，你会被人看成贪婪的吸血鬼。这是伦理观念造成的。但是这个伦理观念会将盈利和慈善隔开，迫使人们做出选择，要么挣钱养家，要么为社会牟利。这导致几乎所有毕业生不会考虑去非盈利部门工作，因为他们不想余生都在经济拮据中度过。《商业周刊》做过调查斯坦福大学MBA毕业生在38岁时各种福利薪资加起来有40万美元，而美国规模在五百万美元以上的医疗慈善团体的CEO平均薪酬只有23万美元，食品援助团体的CEO更少只有8万美元。这导致MBA毕业生不可能加入慈善团体，不是因为他们贪婪，而是因为他们聪明，他们每年捐出10万美元给食品援助团体，能省下5万美元的个人税。他们的收入还能比食品团体CEO多22万美元，并且他们还成了慈善家，而且也有可能坐进食品援助团体的董事会监管这当初决定成为食品团体CEO的那个可怜的倒霉蛋。并且在余生中他们的权力、影响力、社会赞许程度，都始终高于慈善团体的CEO。 广告和营销手段。我们认为营利性部门砸钱营销是必然的，不断砸钱直到广告投入无法让你赚到更多的钱为止。但是我们不希望捐赠给慈善团体的钱被用到广告上。我不想我捐赠的钱用在买广告时间上，我希望我的钱用在需要的人身上。我觉得投入到广告的钱不能带来更多的善款去帮助需要他们的人。90年代Dan的企业发起了“AIDS骑行（I\u0026rsquo;m possible）”和为乳腺癌筹款的60公里三日行走活动。经过9年的努力，有18万平民英雄参与进来，共筹集5亿美元，这是历史上为艾滋病和乳腺癌筹款最快的纪录。根本原因在于人们已经厌倦被动的去做力所能及的慈善。在自己关心的问题上，人们总是会投入更多。还有一点与传统不同的是，我们通过纽约时报打广告，通过电视台的黄金时段打广告，吸引到如此多的朋友。1970-2010年数据显示美国慈善捐赠数额一直固定在GPD的2%。如此看来过去几十年，非营利部门都没能从营利部门那里抢到任何市场份额。你想想看也对，一个不允许进行市场营销的非营利部门怎么可能从盈利部门抢到市场。所有广告都在展示产品的优点，却没有为慈善组织做的任何好事打广告。消费者的钱会流向哪里？ 通过新的方式募集慈善资金的风险问题。迪士尼能砸2亿美元拍电影，搞砸了也不会有人打电话举报。但是一个救济组织的筹款人筹集了不到一百万美元，而你在第一年中没有将善款的75%发到救济人手中，你的人品就会受到质疑。所以非盈利组织不会尝试任何冒险的大规模筹款行动，因为一旦失败声誉将一败涂地。我们都知道不允许失败等于扼杀创新。如果你扼杀了创新，你就没法获得更多的收入，从而你的组织也无法壮大，所以无法解决社会面临的那些大问题。 时间。亚马逊可以在六年时间中不给股东分红，因为股东都有这个耐心，他们知道亚马逊目标很大，他要花时间占领市场。但如果一个慈善组织想要筹划一个时间长达6年的筹款活动，在此期间募集的钱没有分给受捐赠人，而是用来扩大筹款规模，他们肯定会被钉死在十字架上。 利润。盈利性部门可以向股东分红来吸引投资者支持实现自己的新想法。但是在非营利部门你不能分红。所以营利性部门独占了规模庞大的资本市场，非营利部门只能艰难前行，渴望资本的投入。  因此非营利性部门不能花钱从营利性部门那里吸引人才，不能打广告吸引新的消费者，不能承担亏损的风险去吸引客户，不能花很长的时间来做慈善，不能上市融资。这导致从1970年到2009年规模壮大的非营利组织数量，超过五千万美元门槛的只有144，而营利性部门有46136家。我们的社会问题如此巨大，我们的组织却没办法壮大到那样的规模。\n传统慈善观念来源于以前的清教徒，他们由于宗教原因来到美洲（他们是这么说的），但是他们来这里也是为了赚钱。他们是虔诚的人，但是赚钱也是不择手段。同时这些清教徒也信奉加尔文教派，他们被告知自私自利会堕入地狱。既能挣钱又不会下地狱的办法就是慈善。他们每赚到一美元就捐出5美分作为救赎，这样他们就可以放心大胆的去赚钱了。慈善成了一个经济实惠的避难所。因此作为用来化解赚钱带来的罪恶的组织，慈善组织不能自己又去赚钱。400年来没人质疑这点，站出来说这不公平，也不科学。这个观念引出了一个问题，“我的善款有多大比例给了受捐赠人，多大比例成了管理费”。\n传统观念使我们认为管理费是不好的东西，对受捐赠人没有好处。非营利组织应该把大部分精力用在控制管理费比例上。因为管理费越少，受捐赠人能拿到的钱就越多。但是你有没有想过，无论你怎么筹款，这个冷漠的世界也不会给你更多的钱。而管理费能扩大组织规模，更大规模的筹款可能筹到更多倍的善款，可以帮助更多的人。“AIDS骑行”是从风投那拿到了5万美元作为启动资金，9年后我们将这钱赚到了1亿美元，这是扣除了所有AIDS服务后的盈余。“关爱乳腺癌三日行走”是用35万美元作为启动基金，5年，我们把它赚到了2亿美元，这是扣除乳腺癌研究费用之后的。2002年他们的组织被迫解散，因为他的组织将40%的收入投入到人员培训、客户服务、提高用户体验上，而这些为了组织自身发展和筹款规模扩大的投资并没有办法在财报中体现。只能用被妖魔化的词“管理费”笼统概括。因为350名雇员在那天被裁掉。因为他们都被打上了额外开支的标签。接着赞助人用自己的方式管理，他们的管理费更高，乳腺癌研究基金的收入缩减了84%。\n传统观念使得我们相信管理费只有5%的爱心面包义卖要比专业的筹款企业更加高尚，因为后者的管理费高达40%。\n前面提到只有2%的GPD用于慈善捐款，其实只有20%是被用于医疗和人道救助服务，其余80%被用来宗教、高等教育等地方。作者希望能有3%的GDP用于慈善，并且更多的将善款流向医疗和人道救助，这将使这么部门收入翻3倍。这是作者期望的规模，变革。但是如果限制非营利部门的管理费，限制他们的视野，这一切不可能发生。我们这一代人没有人希望自己的墓碑上刻着“我们把慈善管理费控制的很低”，我们希望刻着“我们改变了世界”，改变世界的唯一方式就是我们改变了我们对这些事情的思考方式。所以下次遇到一个慈善组织，不要问他们的管理费是多少，可以问问他们有多大的梦想，如何衡量他们与梦想的接近程度，为了实现这个梦想他们需要什么帮助。我们这一代人有义务去思考已经传递给我们的一切，重新审视她，修订完善它，重新定义人类思考慈善事业的方式。\n 演讲最后作者播放了他的三个孩子的视频，借孩子的嘴说出，“那将是一个真正的社会创新social innovation！”演讲结束观众纷纷起立，鼓掌，表达对他的认可与尊敬。   不得不说这是我看过最打动人心的TED演讲。我想起比尔盖茨在哈佛的毕业典礼上说过一句话，“除非你能够让人们看到或者感受到行动的影响力，否则你无法让人们激动。\n一枝鉛筆的承諾（The Promise of a Pencil）by亞當‧博朗（Adam Braun） //TODO：\nDid you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"511ff7b09740b41906734daa6de01e03","permalink":"/post/charity/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/charity/","section":"post","summary":"记录最近看到的一些有启发的慈善认知","tags":["TED","认知升级"],"title":"关于慈善的认知升级","type":"post"},{"authors":["笼鹰"],"categories":["技术"],"content":"APT deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse deb http://us.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://us.archive.ubuntu.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://us.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse  注意：需要根据需求来改source.list。如：将us替换成cn即变成中国；将bionic替换成对应的ubuntu版本代号；对于镜像网站用mirros.\u0026lt;域名\u0026gt;替换us.archive.ubuntu.com；\ndeb http://mirrors.xjtu.edu.cn/ubuntu/ bionic main multiverse restricted universe deb http://mirrors.xjtu.edu.cn/ubuntu/ bionic-backports main multiverse restricted universe deb http://mirrors.xjtu.edu.cn/ubuntu/ bionic-proposed main multiverse restricted universe deb http://mirrors.xjtu.edu.cn/ubuntu/ bionic-security main multiverse restricted universe deb http://mirrors.xjtu.edu.cn/ubuntu/ bionic-updates main multiverse restricted universe deb-src http://mirrors.xjtu.edu.cn/ubuntu/ bionic main multiverse restricted universe deb-src http://mirrors.xjtu.edu.cn/ubuntu/ bionic-backports main multiverse restricted universe deb-src http://mirrors.xjtu.edu.cn/ubuntu/ bionic-proposed main multiverse restricted universe deb-src http://mirrors.xjtu.edu.cn/ubuntu/ bionic-security main multiverse restricted universe deb-src http://mirrors.xjtu.edu.cn/ubuntu/ bionic-updates main multiverse restricted universe  # newer versions of the distribution. deb http://mirrors.aliyun.com/ubuntu bionic main restricted # deb-src http://mirrors.aliyun.com/ubuntu bionic main restricted ## Major bug fix updates produced after the final release of the ## distribution. deb http://mirrors.aliyun.com/ubuntu bionic-updates main restricted # deb-src http://mirrors.aliyun.com/ubuntu bionic-updates main restricted ## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu ## team. Also, please note that software in universe WILL NOT receive any ## review or updates from the Ubuntu security team. deb http://mirrors.aliyun.com/ubuntu bionic universe # deb-src http://mirrors.aliyun.com/ubuntu bionic universe deb http://mirrors.aliyun.com/ubuntu bionic-updates universe # deb-src http://mirrors.aliyun.com/ubuntu bionic-updates universe ## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu ## team, and may not be under a free licence. Please satisfy yourself as to ## your rights to use the software. Also, please note that software in ## multiverse WILL NOT receive any review or updates from the Ubuntu ## security team. deb http://mirrors.aliyun.com/ubuntu bionic multiverse # deb-src http://mirrors.aliyun.com/ubuntu bionic multiverse deb http://mirrors.aliyun.com/ubuntu bionic-updates multiverse # deb-src http://mirrors.aliyun.com/ubuntu bionic-updates multiverse ## N.B. software from this repository may not have been tested as ## extensively as that contained in the main release, although it includes ## newer versions of some applications which may provide useful features. ## Also, please note that software in backports WILL NOT receive any review ## or updates from the Ubuntu security team. deb http://mirrors.aliyun.com/ubuntu bionic-backports main restricted universe multiverse # deb-src http://mirrors.aliyun.com/ubuntu bionic-backports main restricted universe multiverse ## Uncomment the following two lines to add software from Canonical's ## 'partner' repository. ## This software is not part of Ubuntu, but is offered by Canonical and the ## respective vendors as a service to Ubuntu users. # deb http://archive.canonical.com/ubuntu bionic partner # deb-src http://archive.canonical.com/ubuntu bionic partner deb http://mirrors.aliyun.com/ubuntu bionic-security main restricted # deb-src http://mirrors.aliyun.com/ubuntu bionic-security main restricted deb http://mirrors.aliyun.com/ubuntu bionic-security universe # deb-src http://mirrors.aliyun.com/ubuntu bionic-security universe deb http://mirrors.aliyun.com/ubuntu bionic-security multiverse # deb-src http://mirrors.aliyun.com/ubuntu bionic-security multiverse  Maven 在.m2/setting.xml替换对应部分为以下内容：\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt; \u0026lt;settings xmlns=\u0026quot;http://maven.apache.org/SETTINGS/1.0.0\u0026quot; xmlns:xsi=\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xsi:schemaLocation=\u0026quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\u0026quot;\u0026gt; \u0026lt;!-- \u0026lt;localRepository\u0026gt;~/.m2\u0026lt;/localRepository\u0026gt; --\u0026gt; \u0026lt;pluginGroups\u0026gt; \u0026lt;/pluginGroups\u0026gt; \u0026lt;proxies\u0026gt; \u0026lt;/proxies\u0026gt; \u0026lt;servers\u0026gt; \u0026lt;/servers\u0026gt; \u0026lt;!-- \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; 这里最好不要写成*号，否则你项目中的pom中配置repository不生效 --\u0026gt; \u0026lt;mirrors\u0026gt; \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;nexus-aliyun\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;Nexus Aliyun\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public/\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; \u0026lt;/mirrors\u0026gt; \u0026lt;profiles\u0026gt; \u0026lt;profile\u0026gt; \u0026lt;repositories\u0026gt; \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;nexus\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;local private nexus\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public/\u0026lt;/url\u0026gt; \u0026lt;releases\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/releases\u0026gt; \u0026lt;snapshots\u0026gt; \u0026lt;enabled\u0026gt;false\u0026lt;/enabled\u0026gt; \u0026lt;/snapshots\u0026gt; \u0026lt;/repository\u0026gt; \u0026lt;/repositories\u0026gt; \u0026lt;pluginRepositories\u0026gt; \u0026lt;pluginRepository\u0026gt; \u0026lt;id\u0026gt;nexus\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;local private nexus\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public/\u0026lt;/url\u0026gt; \u0026lt;releases\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/releases\u0026gt; \u0026lt;snapshots\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/snapshots\u0026gt; \u0026lt;/pluginRepository\u0026gt; \u0026lt;/pluginRepositories\u0026gt; \u0026lt;/profile\u0026gt; \u0026lt;/profiles\u0026gt; \u0026lt;/settings\u0026gt;  pip 对某个包使用清华源：sudo pip2 install -i https://pypi.tuna.tsinghua.edu.cn/simple [package-name]\n要一直生效用命令存在配置文件中 pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\nbazel和npm 添加\n\u0026ndash;registry https://registry.npm.taobao.org 对编译时下载的所有依赖使用淘宝镜像\n或者对部分依赖使用镜像，例如phantomjs\nexport PHANTOMJS_CDNURL=https://npm.taobao.org/mirrors/phantomjs\n我的bash环境变量配置 export PROXY_IP=127.0.0.1 export PROXY_PORT=8118 export JAVA_HOME=/usr/lib/jvm/java-8-oracle #export JAVA_HOME=\u0026quot;$(dirname $(dirname $(realpath $(which javac))))\u0026quot; #export M2_HOME=/usr/lib/mvn/mvn #export GOPATH=$HOME/go #export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 export JRE_HOME=$JAVA_HOME/jre export CLASSPATH=.:$JAVA_HOME/lib:/lib: export M2_HOME=/usr/share/maven export MAVEN_OPTS=\u0026quot;-Xms256m\u0026quot; # WORKSPACE export ONOS_ROOT=~/onos source $ONOS_ROOT/tools/dev/bash_profile export PATH=\u0026quot;$PATH:%HOME/bin\u0026quot; export LC_ALL=\u0026quot;en_US.UTF-8\u0026quot; # alias alias speed=\u0026quot;watch -n 1 \\\u0026quot;ifconfig ens33 |grep bytes\\\u0026quot;\u0026quot; alias localproxy=\u0026quot;sudo systemctl start v2ray.service ; sudo systemctl start privoxy.service\u0026quot; alias localunproxy=\u0026quot;sudo systemctl stop v2ray.service ; sudo systemctl stop privoxy.service\u0026quot; alias proxy=\u0026quot;export HTTP_PROXY=http://$PROXY_IP:$PROXY_PORT; export HTTPS_PROXY=https://$PROXY_IP:$PROXY_PORT; export http_proxy=http://$PROXY_IP:$PROXY_PORT; export https_proxy=https://$PROXY_IP:$PROXY_PORT\u0026quot; alias unproxy=\u0026quot;unset HTTP_PRPXY; unset HTTPS_PROXY\u0026quot; alias fishunproxy=\u0026quot;set -e HTTP_PROXY ; set -e HTTPS_PROXY; set -e http_proxy; set -e https_proxy\u0026quot; alias gitproxy=\u0026quot;git config --global http.proxy http://$PROXY_IP:$PROXY_PORT;git config --global https.proxy http://$PROXY_IP:$PROXY_PORT \u0026quot; alias gitunproxy=\u0026quot;git config --global --unset-all http.proxy;git config --global --unset-all https.proxy \u0026quot; alias chrome=\u0026quot;chromium-browser --proxy-server=socks5://127.0.0.1:1080\u0026quot; alias pipmirror=\u0026quot;pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\u0026quot; alias pipunmirror=\u0026quot;pip3 config unset global.index-url\u0026quot; alias myip=\u0026quot;curl cip.cc\u0026quot; #alias myip=\u0026quot;curl ifconfig.cc\u0026quot;  Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"8e5380adf8674f7a4d167683cb010bad","permalink":"/post/mirror/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/mirror/","section":"post","summary":"由于外网访问速度受限制或不可访问，抄近道即可体验 x M/s。修改配置记得先备份！","tags":["镜像"],"title":"加快apt/maven/bazel/npm/pip拉取速度","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"关于梯子 我的一些使用经验 最初我是使用各种免费vpn软件，不稳定又慢，蓝灯还不错。后来又在论坛和油管上得知了一些免费机场，申请账号每日签到就可以换取使用时长。还有些网站每天会放出一些公益的ss/ssr/v2ray节点。例如ssrtool、fanqiang论坛、free-ss。订阅一些电报，也会不定时更新免费节点。再后来嫌烦自己买了vps自建梯子，使用过阿里云、华为云、搬瓦工、virmach的产品，发现还是搬瓦工便宜好用。搭梯子开始是用ss，后来用ssr，最后用v2ray。技术更新升级，墙也跟着更新升级，似乎不存在永久可用的梯子。一到敏感时期IP就被封，无法连接上。虽然过了敏感期又会被放出来。Google大法好，学到了trojan伪装或者用Cloudflare来中转V2Ray的WebSocket+TLS流量，考虑到v2ray在各个平台支持的更好，我现在一直在用v2ray WSS+bbrplus。于是买了一个非常便宜的域名做伪装，这样就可以避免墙，这招目前倒是一直有效。而其他的流量伪装技术，例如微信电话、bt下载都活得不长久。但是套了CF速度当然就降下来了，以前用v2ray可以在油管看1080p，现在全看网络的心情。想买搬瓦工的Just My Socks服务，被墙自动切换IP，但是一个月5.88刀又不舍得。以后工作了可以尝试一下。现在科学上网还是回归到了原始，即白嫖，因为找到了三棵大树，贼稳，蚂蚁加速器、二爷、老王vpn这三个都免费，配合v2rayN/shadowsockR客户端使用，大风大浪都过来了，速度比我的梯子还好，当然那是因为我没钱买贵的vps服务。 这些主要都是针对PC端，因为安卓端/IOS端可以在google商店和app store找到大量免费软件。对于不了解的小白，可以先下载lantern vpn打开大门，然后请教google。\n我用梯子干什么  使用油管和twitter。我一开始喜欢用b站和微博。后来发现这些网站会超出我的想象消耗掉我一天中很多的时间，远远大于我的需要。和今日头条、抖音、快手、知乎类似。这些软件我都用很长一段时间，并最终戒掉了，现在实在想归总对它们吐槽一下：首先b站的首页居然把所有板块都摆上去，而且都是播放量高的或者标题吸引人的视频，使得用户会在首页就迷失自己，我本来就是想追个番剧或者看个网课，这些无关的内容老是分散我的注意力诱惑我点进去看。尤其在观看视频的时候，不自觉地注意到周围一些推荐视频，这个可能更配色主题有关系，总之b站这种设计有意或者无意的让人迷失在里面，你会发现你在b站逛一整天都觉得看不够，好内容太多了。油管则不同，油管首页直接是我最近观看的内容相关的内容，由于我自己为了屏蔽那些我看完学不到什么而只是短暂的娱乐内容，我只看有用的视频，经过一段时间的训练后我每次打开油管再也不会出现娱乐或者好玩的视频了。我们都知道舒适区是学不到东西的，有用的东西往往没有娱乐性，当然也有例外，例如我订阅了一些用漫画讲知识的YouTuber。而且还有黑暗模式，等等油管确实比b站做的好。然后是微博，以前的我每天都要刷大量的信息其中很多都是重复的内容，毕竟一有热点大家都会蹭热度来获取流量。热搜一直在更新，关注的博主也一直在更新，微博源源不断的给我输送一些我短暂性愉悦使人成瘾的内容。而推特，几乎不存在会耗费我精力的无关内容，因为我关注的都是业内人士和科学家。ta们很少发一些娱乐的东西，经常发的是领域内的一些进展，自己的思考还有实践经验。不像微博上充斥着没有营养的内容。虽然推特上也有傻子但是只要我自己不想看推特不会让我看到。然后说说知乎，和微博一个道理，一开始我是被知乎的逼格吸引了，确实有很多人是认认真真的在写回答，甚至大量引用文献来佐证，让人信服。但是后来变味了，自从知识付费的时代到来，（我也不知道是不是跟这个有关系），有趣但是没有意义的问题越来越多，有些高赞的回答通篇废话。让我不再使用知乎的最重要的一个原因是我不该把它当成学习的平台，因为它的知识是碎片化的，这个就和公众号一样，虽然都是有用的内容，但是你永远形成不了体系，除非花时间整理，这是低效率的学习，让我工作时间都变少。直到我发现kindle上有知乎周刊plus这玩意，它的内容是整理提炼过的，我对kindle的使用越来越频繁，甚至重新拾起来每日看书的习惯。我给我kindle收藏夹列了个书架，按知识体系清晰的划分了，每日阅读最近最需要学习的内容。在这个内容爆炸的时代，一不小心就会被别人控制自己的时间，而今日头条和抖音快手这些快餐软件就不必说了，快餐本来就没多少营养还让人发胖。 总的来说，我不想被动地看电视刷手机，有什么就看什么，有什么就刷什么，而是想主动地看，主动地刷，只看自己想看的节目，想了解的内容。被动使你沉迷，主动才有掌控。就算时间还是花了那么多，至少体验不同。现在的我彻底戒除了知乎、微博、微信公众号、b站，顺便罗列一下我每天使用频率最高的一些网站和软件：  手机上：系统层级的屏幕时间管理（如MIUI的关注模式/设备使用限制/应用使用限制）、得到（音频）、可可英语（背单词）、kindle（阅读）、AppBlock（封锁软件和网站）、fabulous（习惯养成的私人教练）、普拉纳呼吸（冥想练习）、quitzilla（戒除坏习惯）、edge测试版、微软桌面、google play、v2rayNG/老王vpn/蓝灯vpn/蚂蚁加速器（梯子）还有微信。 电脑：edge(canary版本)、kindle、微软todo、微软便签、VMware、onedrive（文件云存储）、putty（远程登录）、intellij idea（java开发）、xlauch（远程桌面server）、uTorrent（pt下载学习资料）、v2rayN/蚂蚁加速器/shadowsocksR（梯子） chromium浏览器插件Adblock, check plus for gmail, downloader for instagram, google翻译，liner,octotree, proxy switchyomega, strick workflow, vimium, webtime tracker, 档案娘助手，谷歌上网助手   科研需求：使用google和google scholar，调研、看文献 编程需求：git clone，maven，bazel，这些从需要从国外服务器下载资源，不开代理很慢。顺便一提，git clone除了开代理克隆还有三种方法也好用，（1）电脑连接手机的热点：对于某些国外站点手机流量有时候比宽带好用（2）gitee中转的方式加速：先从github拉到gittee，再clone gittee，最后改remote url.（3）vps上clone好然后打包从自建的网盘中下载或者用rsync命令通过ssh同步。而maven可以配置阿里云，bazel可以配置淘宝源。对于opendaylight这种在中央仓库没有，只在私服有的资源，只能用vpn下载。  对于梯子这事的看法 敏感时期看到别人抱怨自己买的科学上网服务失灵的时候，我只能心理表示无奈，因为我知道墙的必要性和局限性，目前没有更好的方法改善现状解决问题。首先，梯子这项技术是危险的。经常看到github上star排在前面的梯子突然就由于不可描述的原因停止维护了，虽然技术本身没有错，但是使用它的人往往会干出不符合我国法律法规的事情毕竟大家都是人在国内。我发自内心的认为墙是正确的事情，因为当前国民素质还不够高。看到傻子在推特、油管上造谣、诽谤、抹黑政治，真让人痛心。谁不想自己的祖国变好呢，靠敲键盘能改变什么，垃圾言论带来的只能是人心不安、社会动荡，这种人应该抓起来。我迫切地希望国民教育得到提高，但是发展往往不能均衡，如果国民都追求做论语里的君子，那墙就没有必要了，这显然是理想主义，不现实，有人的地方就有恶存在，因为人性中的恶经过上万年都没有消除掉，国家的治理一定要通过法律法规，同时弘扬社会主义核心价值观。如果人的三观或者认知出了问题，在科学上网的过程，必然主动或被动违法违规。\n作为一个科研人员和程序员，不科学上网还真不行。因为墙不仅把国外不好的东西挡住了，也把好的东西挡住了。不好的东西，不用说坚决要抵制。好的东西做的比我们好，就要学习它，使用它，超越他。虽然我们有自己的解决方案，但是这些方案要么不是最好的，要么就是使用体验太差。我们作为解决方案的生产者参与者，必须扩展视野，找世界上最好的技术来借鉴比较超越，往往由于墙受到限制，不能容易地获取到生产需要使用的资源。同时我认为不能鼓励所有人都找世界上最好的东西用，因为我们自己生产的东西如果没人用，我们也就没有了动力去优化它。我们这些人都明白，科学上网是为了自我提升和让社会变好。\nDid you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"27c4cbb906939213f407e1b655910d12","permalink":"/post/v2ray/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/v2ray/","section":"post","summary":"本人关于梯子的一些经验和使用需求，顺便安利一些宝藏软件, 也谈谈墙的必要性和局限性","tags":["墙","代理"],"title":"梯子是双刃剑","type":"post"},{"authors":["笼鹰"],"categories":["生活"],"content":"为什么又陷入迷思 💡问题的起源于《大问题：简明哲学导论》， 假如发明了台机器，他连着许多电极和一个生命维持系统，名叫快乐箱。只要人进入这个箱子就会体验到一种特别快乐的感觉，而且这种感觉会一直持续下去，它会产生足够多的变化使人永不厌倦。你愿意进去度过一生吗？\n老实说我本科时候就想明白了人生的意义就是追求幸福。而幸福其实是大脑的一种状态，它跟外在条件无关，只有内心决定，有点像王阳明的知行合一，心是决定的关键因素。从生理上看人感到幸福实质就是内啡肽、多巴胺、催产素带来的感官体验。人生意义应该不仅是追求幸福，因为如果是这样，我肯定会选择进快乐箱；但是显然快乐箱中完结自己的生命不是我想要的。人生除了追求幸福，一定还有别的意义？价值观？使命感？自我实现？书说了世界上根本不存在答案。因为每个人都有属于自己的答案。\n不同人的观点  人生本来就没有意义，如果硬要说有，那就是活着本身。人类只是大自然无目的演化的结果，假如生命消失，地球还是会照样运行。改变世界，让社会变好，从宇宙的角度看就是个笑话，这只是人强行给自己赋予的一种信仰。（对于这种观点我没觉得它讲错了，而是说我不接受消极的生活方式，因为什么都能看开或放下我为什么不去出家，让烦心事随它来随它去。我更认同要么好好活要么赶紧死） 人生是使命。伟人的人生都是将自己全部身心投身到某项事业。例如教育、医疗、社会改革等。普通老百姓通常做不到也不想把一生都献给唯一的使命，但会对某些事情产生使命感。例如很多父母认为把孩子培养好。（这种观点是我最认同的，但是我目前还不清楚自己的使命是什么，或许我没有很多机会去尝试，也许到发达城市历练更有可能发现自己的潜能） 人生是为欲望而活。就像浮士德，人生就是在追求一个又一个欲望，最后希望死的时候得到满足。但是欲望怎么可能会满足，对人性也太不了解了。古代的皇帝老了可还不想退位就会怀疑自己的儿子，然后父子相争。现代的企业家很多七老八十了还不退休让权。不管是对权力放不下还是他们想继续为这个国家、这个社会或者企业再做点贡献，这都是一种欲望。例如追求爱情是满足自己的情欲，去世界各地旅游或者喜欢看书是满足自己的求知欲，吃货人生是满足自己的食欲。当官的人利用权力实现自己小时候想让社会变好的理想，这是权力欲。做慈善的人，我们看到很多企业家都喜欢用自己的姓名命名一些建筑或基金会，这是满足自己对名誉追求的欲望。欲望是人性，为欲望而活其实和第二种为使命而活有什么区别呢，不都是欲望吗，人如果能放下欲望那都去当和尚了，我们只是喜欢用崇高的理想来修饰追名逐利的心而已。 人生是受苦。之前读过一些佛法，《苦才是人生》《生命这出戏》《通过佛法看世界》。有个网站studybuddhism，我也从里面学习了一些佛法。佛法内容太丰富了等我看完以后必然需要专门写一个博客。我目前对宗教的看法就是神佛我不信，但是其中的道理和哲学可以好好学习。 人生是涅槃。不是追求成就，也不是追求快乐，而是内心的平静、无欲无求。太过注重主观感受，渴望快乐避免痛苦，实际上主观感受只是一瞬间的波动，没有实质意义。人的情绪就像海上的波浪，抓不住也避不开，最好的方式是坐在海边，让海浪自由来去。 人生的意义是学习。多经历多体验，多成长，发挥自己的潜力。 人生的意义是爱。人际关系是决定人是否幸福的关键。 生活是场游戏，要活出自己的风格 生活是利他主义。我认为这应该是个人价值的最佳实践方式。  我的思考 看了这么多观点后我仍然感到迷惑，因为我觉得它们都是片面的，追求其中任何一个作为人生意义，都会损失很多。财新网的总编辑说过一句话我印象深刻：人生真正重要的问题不会有答案，只有选择和取舍。 但是我还是经常会去思考如何让生命变得更有意义这个问题。有人说，如果你找不到自己的人生意义，不妨问自己为什么不去自杀，或者想象自己的一生如何度过，死时才能不痛苦。然后结合稻盛和夫的《活法》、《干法》里的观点，我进行了进一步思考：\n首先我认定的大前提是人生美好的太多，可以追求的也很多：自我实现、社会贡献、爱情、亲情、心性提升等等。如此看来，人生就像一次考试，要考语文、数学、英语好多门科目。我们可以有两种选择：喜欢学语文，就努力把语文考到99分，其他科目尽力而为即可；第二章选择就是我全部都要，兼顾所有科目，门门考85分也不错。\n先不要管怎样考试成绩能成为优秀毕业生，因为人生这场考试没有人会给出统一的衡量标准，不同的人站在我的墓碑前必然会给出不同的评价。因此，我自己的标准应该由我自己来指定！怎么样的墓志铭让自己满意地死去！我非常功利地去思考这个问题，由于能力有限我无法像纳什一样用数学去求解找出并证明什么纳什均衡点之类的。结合自己的出身和原生家庭，我希望别人这样叙述我的人生：“他出身于一个小县城的贫穷家庭，通过苦读考入了名牌大学然后进入了一线城市的某知名企业，二十年钻研在某个领域拼命工作，带领团队开发了某项产品大获成功。在打拼的这些年里他很幸运，因为他的父母身体都很健康，并且他还组建了自己的家庭，生活还算不错，不愁吃喝。每年他都会拿出收入中的5%资助一位孤儿上学和生活。45岁时他离开了公司，加入了某初创公司，成为合伙人，专注于解决xx问题，65岁时退休开了家小日料店。钻研日料。在维持开店成本的同时，他将收入80%用于公益事业。85岁去世。”\n我非常认同稻盛和夫《干法》中的劳动观，努力工作才是实现理想人生的路径。同时我最近也开始在学习理财的知识，但是目前的我并不认为靠研究股票买卖实现财富自由的想法很靠谱。我承认财商很重要，所以现在开始要学，但是我认为世界上不存在收益高风险小的财富自由办法，理财只能作为对抗通货膨胀的手段，不能把家当压在一个你无法掌控的市场中。只有一种方法能实现财富自由，那就是通过拼命工作，拼命工作是为自己工作，提升自己的能力，而不是为了挣死工资。我不希望我的人生大起大落。我希望它像蜗牛一样一步一个脚印向上爬。\n我打心里想为这个世界做点什么，想让世界变好，但是由于现阶段公益事业存在一个巨大的问题就是刚毕业的大学生加入一个慈善组织，还不如他去大企业打拼每年挣很多钱只需要拿出一部分钱做公益达到的效果好（这个是出自Dan Pallotta在TED中的一次演讲“重新认识慈善”）。多数人都不会选择这么做，而是用一种聪明的方法，提高自己的影响力和资本来做慈善，而这个途径就是努力工作，在社会上自我实现，这才是我想选择的道路。凭个人力量改变不了世界，即使是马云、比尔盖茨这么有能力的人退休之后就一直在致力于让世界变得更好，但是讲真的不够，对于世界来说仅仅是微小的力量，真正强大的力量是传递关爱，我觉得电影《Pay It Forward》的观点才是可持续、行得通的办法：每个人要无偿的帮助三个人，并有两点要求这个帮助要是受助者自己无法或很难做到的事情（也就是说不是微不足道的事情），其次是把这个计划传达给受到帮助的人。我觉得这是真正的社会变革，虽然偏理想主义色彩了，因为教育或者经济环境等原因国民素质目前普遍不够高，这个传递链容易被中断。但是我们如果不去做，那么世界就没有可能变好；我们能做的很有限，但是确是一个火种在传递希望。我们这一代人不管个人有多成功都将逝去，挣再多的钱，也改变不了这个事实，这样的人生价值能有多大？将利他主义传递给自己帮助过的人和自己的后代，让他们也参与到这个计划中来，这样人即使死去了大家的精神也连在一起，致力于让这个世界变得更好。\n总结 还是那句话，人生真正重要的问题不会有答案，只有选择和取舍。陪伴我度过童年的一部动漫《火影忍者》传达的“火之意志”至今仍然会带给我感动。作品中，主要人物之间一直在探讨一个话题，那就是现实与理想。其实这部动漫里没有出现天生的纯粹的恶，所谓的反派其实也是一种理想主义者，他们在经历了残酷的现实之后，不再相信人性，希望创造一种绝对的力量，例如无限月读，让自己控制全世界，创造一个完美世界。主人公漩涡鸣人是火之意志的继承者，一个天生的理想主义者，无论受到多少次现实的打击，依然选择相信世界可以变好，虽然他自己也找不到改变世界的方法，但是他通过坚持自己的原则不断地影响周围的人，从某种程度上确实让世界在好的方向上发展。\n 人早晚会死，死了就什么都没了。因此生命的意义应该是薪火相传。活着时贡献自己的微薄力量于宏大的社会进步事业中。越努力，就越接近自我实现，自己对社会的影响就越有力。更重要的是把利社会主义传递给自己的后代和自己帮助过的人。 金钱不是真正的财富，因为它太容易失去，而且本身没有价值。真正的财富应该是健康、经历、知识、陪伴家人的时光、对社会的贡献程度。人生短暂，且行且珍惜吧 世界充满了不美好，期望人人向善是一种天真的理想主义，普通人能做的只要着眼于当下，多做好事，把爱传递出去就是无量功德     Did you find this page helpful? Consider sharing it 🙌\n","date":1602028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1602028800,"objectID":"a989c71c0548d1c4ecbc3eb4f3431642","permalink":"/post/meaning/","publishdate":"2020-10-07T00:00:00Z","relpermalink":"/post/meaning/","section":"post","summary":"假如发明了台机器，他连着许多电极和一个生命维持系统，名叫快乐箱。你愿意进去吗？追求幸福是人生的意义，后来又对此有了疑问","tags":["三观"],"title":"活着的意义","type":"post"}]